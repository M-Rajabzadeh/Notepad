## 03 - Creating Databases & Tables

-- for ingore a line in code


SELECT * FROME cats;                    Select all table
show databases;                         Show databases
CREATE DATABASE <name>;                 Create database
DROP DATABASE <name>;                   Delete database
USE <database name>;                    open database
SELECT database();                      current database
varchar (100) maximum (text)


CREATE TABLE <name> (
    name VARCHAR(50),
    breed VARCHAR(50),
    age INT
);


SHOW tables;

SHOW COLUMNS FROM <table name>;
          or
DESC <table name>;
          or
DESCRIBE <table name>;




## 04 - Inserting Data


CREATE TABLE <cats> (
    name VARCHAR(50),
    age INT
);


-- Single Insert:

INSERT INTO <cats> (name, age)
VALUES ('Blue Steele', 5);

-- Multiple Insert:

INSERT INTO <cats> (name, age)
VALUES
  ('Meatball', 5),
  ('Turkey', 1),
  ('Potato Face', 15);


-- Using NOT NULL: Force user to write somthing for fill 2 value

CREATE TABLE cats2 (
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL
);


Quotation Note:

('Nika\'s apple');     instead     ('Nika's apple')
('She said "haha"');   is fine



-- Define a table with a DEFAULT name specified:

CREATE TABLE cats3  (    
    name VARCHAR(20) DEFAULT 'unnamed',    
    age INT DEFAULT 99  
);


-- Combine NOT NULL and DEFAULT:

CREATE TABLE cats4  (    
    name VARCHAR(20) NOT NULL DEFAULT 'unnamed',    
    age INT NOT NULL DEFAULT 99 
);

-- One way of specifying a PRIMARY KEY

CREATE TABLE unique_cats (
	cat_id INT NOT NULL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL
);

-- Another option:

CREATE TABLE unique_cats2 (
	cat_id INT,
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL,
    PRIMARY KEY (cat_id)
);


--  AUTO_INCREMENT

CREATE TABLE unique_cats3 (
    cat_id INT AUTO_INCREMENT PRIMARY KEY ,
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL,
);

-- Another option:

CREATE TABLE unique_cats3 (
    cat_id INT AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL,
    PRIMARY KEY (cat_id)
);

-----------------------------------------------------------
## Some Example
-- Defining employees table

CREATE TABLE employees (
    id INT AUTO_INCREMENT,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    middle_name VARCHAR(255),
    age INT NOT NULL,
    current_status VARCHAR(255) NOT NULL DEFAULT 'employed',
    PRIMARY KEY(id)
);
-- Another way of defining the primary key:



CREATE TABLE employees (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    middle_name VARCHAR(255),
    age INT NOT NULL,
    current_status VARCHAR(255) NOT NULL DEFAULT 'employed'
);
-- A test INSERT:



INSERT INTO employees(first_name, last_name, age) VALUES
('Dora', 'Smith', 58);
-----------------------------------------------------------
## 05 - CRUD Basics
CRUD   -->    CREATE - READ - UPDATE - DELETE

-- SELECT <option1>, <option2> FROM cats;

-- SELECT * FROM cats WHERE age = 4;
-- SELECT name FROM cats WHERE age = 4;
# upper case and lower case dosent matter in result

-- SELECT * FROM cats WHERE cat_id=age;     IS POSSIBLE

# Use 'AS' to alias a column in your results
(it doesn't actually change the name of the column in the table)
-- SELECT cat_id AS id, name FROM cats;

# CODE: Updating Data
UPDATE cats SET age=14 WHERE name='Misty';
UPDATE cats SET age=14;    !!!   UPDATE ALL CASTS AS SAME AGE

-- Delete all cats with name of 'Egg':
DELETE FROM cats WHERE name='Egg';

-- Delete all rows in the cats table:
DELETE FROM cats;

## CONCAT & CONCAT_WS
-- SELECT CONCAT('pi', 'ckle');
   SELECT CONCAT(author_fname,' ', author_lname) AS author_name FROM books;

-- SELECT CONCAT_WS('-',title, author_fname, author_lname) FROM books;


## SUBSTRING or SUBSTR

SELECT SUBSTRING('Hello World', 1, 4);
SELECT SUBSTRING('Hello World', 7);
SELECT SUBSTRING('Hello World', -3);
SELECT SUBSTRING(title, 1, 10) AS 'short title' FROM books;
SELECT SUBSTR(title, 1, 10) AS 'short title' FROM books;


## Combining CONCAT & SUBSTRING
    (
        SUBSTRING(title, 1, 10),
        '...'
    ) AS 'short title'
FROM books;


## Replace
REPLACE(str, from_str, to_str)

SELECT REPLACE('Hello World', 'Hell', '%$#@');
SELECT REPLACE('Hello World', 'l', '7');
SELECT REPLACE('Hello World', 'o', '0');
SELECT REPLACE('HellO World', 'o', '*');
SELECT REPLACE('cheese bread coffee milk', ' ', ' and ');
SELECT REPLACE(title, 'e ', '3') FROM books;
SELECT REPLACE(title, ' ', '-') FROM books;

## Reverse
SELECT REVERSE('Hello World');
SELECT REVERSE('meow meow');
SELECT REVERSE(author_fname) FROM books;
SELECT CONCAT('woof', REVERSE('woof'));
SELECT CONCAT(author_fname, REVERSE(author_fname)) FROM books;

## Char length
SELECT CHAR_LENGTH('Hello World');
SELECT CHAR_LENGTH(title) as length, title FROM books;
SELECT author_lname, CHAR_LENGTH(author_lname) AS 'length' FROM books;
SELECT CONCAT(author_lname, ' is ', CHAR_LENGTH(author_lname), ' characters long') FROM books;

## Upper & Lower or UCASE & LCASE
SELECT UPPER('Hello World');
SELECT LOWER('Hello World');
SELECT UPPER(title) FROM books;
SELECT CONCAT('MY FAVORITE BOOK IS ', UPPER(title)) FROM books;
SELECT CONCAT('MY FAVORITE BOOK IS ', LOWER(title)) FROM books;

## Insert
## Left
## Repeat
## Trim